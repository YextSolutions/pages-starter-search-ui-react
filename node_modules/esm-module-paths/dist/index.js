import { fileURLToPath } from "url";
import { dirname } from "path";
import callsites from "callsites";
function extractFilePathFromFileUrl(url) {
    if (!url) {
        throw new Error("Unable to get filename");
    }
    return fileURLToPath(url);
}
export function getFileName() {
    var _a;
    var url = (_a = callsites()[1]) === null || _a === void 0 ? void 0 : _a.getFileName();
    return extractFilePathFromFileUrl(url);
}
export function getDirName() {
    var _a;
    // Can't be reused from getFilename because that would change the callstack and make [1] not what we need.
    var url = (_a = callsites()[1]) === null || _a === void 0 ? void 0 : _a.getFileName();
    return dirname(extractFilePathFromFileUrl(url));
}
export function getModulePaths() {
    var _a;
    var url = (_a = callsites()[1]) === null || _a === void 0 ? void 0 : _a.getFileName();
    var fileName = extractFilePathFromFileUrl(url);
    return {
        __filename: fileName,
        __dirname: dirname(fileName),
    };
}
export var __filename = getFileName;
export var __dirname = getDirName;
