const serveHttpFunction = async (req, res, next, serverlessFunction) => {
  const argument = {
    queryParams: req.query,
    pathParams: req.params,
    method: req.method,
    headers: req.headers,
    body: JSON.stringify(req.body),
    site: mockSiteInfo
  };
  if (serverlessFunction.default) {
    const fnRes = await serverlessFunction.default(argument);
    res.status(fnRes.statusCode).header({ ...fnRes.headers, "Content-Type": "application/json" }).send(fnRes.body);
  } else {
    next();
  }
};
const mockSiteInfo = {
  branchId: "mock-branch-id",
  businessId: "000000",
  businessName: "mock-dev-server-busines",
  commitHash: "aaaaaa",
  commitMessage: "mock commit message",
  deployId: "00",
  displayUrlPrefix: "url-prefix",
  invocationContext: "local",
  partnerId: "000",
  platformUrl: "platform-url",
  previewDomain: "preview-url",
  productionDomain: "production-url",
  repoBranchName: "master",
  repoBranchUrl: "https://github.com/user/repo/tree/main",
  repoUrl: "https://github.com/user/repo",
  siteId: "123456",
  siteName: "Mock Site Name",
  stagingDomain: "staging-url",
  yextUniverse: "development"
};
export {
  mockSiteInfo,
  serveHttpFunction
};
