import { getRelativePrefixToRootFromPath } from "../../../common/src/template/paths.js";
import { validateGetPathValue } from "../../../common/src/template/internal/validateGetPathValue.js";
const propsLoader = async ({
  templateModuleInternal,
  entityId,
  locale,
  document
}) => {
  const { transformProps, getPath } = templateModuleInternal;
  if (entityId && !document) {
    throw new Error(
      `Could not find document data for entityId and locale: ${entityId} ${locale}`
    );
  }
  document.siteInternalHostName = process.env.YEXT_PAGES_SCOPE;
  let templateProps = {
    document,
    __meta: { mode: "development" }
  };
  if (transformProps) {
    templateProps = await transformProps(templateProps);
  }
  const path = getPath(templateProps);
  validateGetPathValue(path, templateModuleInternal.path);
  return {
    ...templateProps,
    path,
    relativePrefixToRoot: getRelativePrefixToRootFromPath(path)
  };
};
export {
  propsLoader
};
