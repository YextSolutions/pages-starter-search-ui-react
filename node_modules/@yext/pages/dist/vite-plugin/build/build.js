import buildStart from "./buildStart/buildStart.js";
import closeBundle from "./closeBundle/closeBundle.js";
import { processEnvVariables } from "../../util/processEnvVariables.js";
const intro = `
var global = globalThis;
`;
const build = async (projectStructure) => {
  const { envVarConfig, subfolders } = projectStructure.config;
  return {
    name: "vite-plugin:build",
    apply: "build",
    config: async () => {
      return {
        envDir: envVarConfig.envVarDir,
        envPrefix: envVarConfig.envVarPrefix,
        resolve: {
          conditions: ["worker", "webworker"]
        },
        publicDir: false,
        build: {
          outDir: projectStructure.config.rootFolders.dist,
          manifest: true,
          rollupOptions: {
            preserveEntrySignatures: "strict",
            output: {
              intro,
              assetFileNames: `${subfolders.assets}/${subfolders.static}/[name]-[hash][extname]`,
              chunkFileNames: `${subfolders.assets}/${subfolders.static}/[name]-[hash].js`,
              sanitizeFileName: false,
              entryFileNames: () => {
                return `${subfolders.assets}/[name].[hash].js`;
              },
              manualChunks: (id) => {
                if (id.includes("commonjsHelpers"))
                  return "commonjsHelpers";
              }
            }
          },
          reportCompressedSize: false,
          assetsDir: subfolders.assets
        },
        define: processEnvVariables(envVarConfig.envVarPrefix)
      };
    },
    buildStart: buildStart(projectStructure),
    closeBundle: closeBundle(projectStructure)
  };
};
export {
  build
};
