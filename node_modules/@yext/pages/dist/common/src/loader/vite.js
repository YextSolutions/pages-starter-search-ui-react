import { createServer } from "vite";
import { processEnvVariables } from "../../../util/processEnvVariables.js";
import { pathToFileURL } from "node:url";
import { loadViteModule } from "../../../dev/server/ssr/loadViteModule.js";
const getViteServerConfig = (projectStructure) => {
  return {
    server: {
      middlewareMode: true
    },
    appType: "custom",
    envDir: projectStructure.config.envVarConfig.envVarDir,
    envPrefix: projectStructure.config.envVarConfig.envVarPrefix,
    define: processEnvVariables(
      projectStructure.config.envVarConfig.envVarPrefix
    ),
    optimizeDeps: {
      include: ["react-dom", "react-dom/client"]
    }
  };
};
const loadModules = async (modulePaths, transpile, projectStructure) => {
  const importedModules = [];
  if (transpile) {
    const vite = await createServer(getViteServerConfig(projectStructure));
    for (const modulePath of modulePaths) {
      const functionModule = await loadViteModule(vite, modulePath);
      importedModules.push({
        path: modulePath,
        module: functionModule
      });
    }
    await vite.close();
  } else {
    for (const modulePath of modulePaths) {
      importedModules.push({
        path: modulePath,
        module: await import(pathToFileURL(modulePath).toString())
      });
    }
  }
  return importedModules;
};
export {
  getViteServerConfig,
  loadModules
};
